(1)基础类型
•整数类型：byte(1)，short(2)，int(4)，long(8)
•浮点数类型：float(4)，double(8)
•字符类型：char(2)
•布尔类型：boolean(4)

想省略变量类型，可以使用var关键字
StringBuilder sb = new StringBuilder();  -->var sb = new StringBuilder();


(2)移位运算
<<  >> 看箭头方向，即是移动方向（最高位不变（对负数而言））
>>> 不带符号的右移运算，可将负数变为正数

(3)运算优先级
运算优先级从高到低依次是：
•()
•! ~ ++ --
•* / %
•+ -
•<< >> >>>
•&
•|
•+= -= *= /=

(4)浮点型的比较，是取差的绝对值，是否小于一个很小的数（0.00001）

(5关系运算符
关系运算符的优先级从高到低依次是：
•!
•>，>=，<，<=
•==，!=
•&&
•||

(6)数组
Java的数组有几个特点：
•数组所有元素初始化为默认值，整型都是0，浮点型是0.0，布尔型是false；
•数组一旦创建后，大小就不可改变。
可以通过索引访问数组元素，但索引超出范围将报错；
数组元素可以是值类型（如int）或引用类型（如String），但数组本身是引用类型；

(7)if判断
if ... else可以做条件判断，else是可选的；
不推荐省略花括号{}；
多个if ... else串联要特别注意判断顺序；
要注意if的边界条件；
要注意浮点数判断相等不能直接用==运算符；
引用类型判断内容相等要使用equals()，注意避免NullPointerException。

(8)switch
switch语句可以做多重选择，然后执行匹配的case语句后续代码；
switch的计算结果必须是整型、字符串或枚举类型；
注意千万不要漏写break，建议打开fall-through警告；
总是写上default，建议打开missing default警告；
从Java 12开始，switch语句升级为表达式，不再需要break，并且代码更简洁。

(9)while
while循环先判断循环条件是否满足，再执行循环语句；
while循环可能一次都不执行；
编写循环时要注意循环条件，并避免死循环。

(10)do while
do while循环先执行循环，再判断条件；
do while循环会至少执行一次。

(11)for
for循环通过计数器可以实现复杂循环；
for each循环可以直接遍历数组的每个元素；
最佳实践：计数器变量定义在for循环内部，循环体内部不修改计数器；

(12)break continue
break语句可以跳出当前循环；
break语句通常配合if，在满足条件时提前结束整个循环；
break语句总是跳出最近的一层循环；
continue语句可以提前结束本次循环；
continue语句通常配合if，在满足条件时提前结束本次循环。
